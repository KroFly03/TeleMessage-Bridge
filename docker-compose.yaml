version: '3.8'

services:
    server:
      build: ./backend
      container_name: telemessage_bridge_server
      env_file:
        - ./backend/.env
      environment:
        - POSTGRES_HOST=db
      ports:
        - '8000:8000'
      depends_on:
        celery:
          condition: service_started
        bot:
          condition: service_started
        db:
          condition: service_healthy

    redis:
      image: redis
      container_name: telemessage_bridge_redis
      restart: always
      ports:
        - "6379:6379"

    celery:
      build: ./backend
      container_name: telemessage_bridge_celery
      command: celery -A telemessage_bridge worker -l info
      env_file:
        - ./backend/.env
      depends_on:
        redis:
            condition: service_started

    flower:
      image: mher/flower:0.9.7
      container_name: telemessage_bridge_flower
      command: flower --broker=redis://redis:6379/0 --port=7777
      ports:
        - "7777:7777"
      depends_on:
        redis:
          condition: service_started
        celery:
          condition: service_started

    bot:
      build: ./backend
      container_name: telemessage_bridge_bot
      env_file:
        - ./backend/.env
      environment:
        - POSTGRES_HOST=db
      depends_on:
        db:
          condition: service_healthy
        migrations:
          condition: service_completed_successfully
      command: python manage.py runbot

    migrations:
      build: ./backend
      container_name: telemessage_bridge_migrations
      env_file:
        - ./backend/.env
      environment:
        - POSTGRES_HOST=db
      depends_on:
        db:
          condition: service_healthy
      command: python manage.py migrate

    db:
      image: postgres:15.2
      container_name: telemessage_bridge_db
      ports:
        - "5432:5432"
      env_file:
        - ./backend/.env
      restart: always
      volumes:
        - pg_data:/var/lib/postgresql/data/
      healthcheck:
        test: pg_isready -U admin -d telemessage_bridge
        interval: 3s
        retries: 10
        timeout: 3s

volumes:
  pg_data: